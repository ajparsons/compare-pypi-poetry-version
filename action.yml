name: 'Compare Pypi and Poetry version'
description: 'Create outputs future steps can use depending if the pypi version is out of sync'
inputs:
  package_name: 
    description: 'Name of pypi package'
    required: true
outputs:
  remote_exists:
    description: "'true' or 'false' there is a pypi item for this repo"
    value: ${{ steps.get_version_status.outputs.remote_exists }}
  version_difference:
    description: "'true' or 'false' if there is a difference between poetry and pypi version"
    value: ${{ steps.get_version_status.outputs.version_difference }}
  poetry_version:
    description: "Current poetry semvar version"
    value: ${{ steps.get_version_status.outputs.poetry_version }}
  version_tags:
    description: "space seperated lists for tags for current version"
    value: ${{ steps.get_version_tags.outputs.tags }}
runs:
  using: "composite"
  steps:

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Get version status
      run:
        get_version_status.sh

    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash

    - name: get_version_status
      id: get_version_status
      run: get_version_status.sh
      shell: bash
      env:
        pythonPackage: ${{ inputs.package_name }}

    - name: get_version_tags
      id: get_version_tags
      shell: bash
      run: |
        cd ${{ github.action_path }}
        python get_tags.py
      env:
        POETRY_VERSION: ${{ steps.get_version_status.outputs.repo_poetry_version }}